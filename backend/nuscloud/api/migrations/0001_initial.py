# Generated by Django 2.1.2 on 2018-11-02 16:06

import api.models
import datetime
from django.db import migrations, models
import django.utils.timezone
from django.utils.timezone import utc


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('ivle_user_id', models.CharField(editable=False, max_length=100, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=250)),
                ('email', models.EmailField(max_length=255)),
                ('ivle_token', models.CharField(max_length=600)),
                ('ivle_expiry', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_updated', models.DateTimeField(default=datetime.datetime(1, 1, 1, 0, 0, tzinfo=utc))),
                ('dropbox_token', models.CharField(max_length=500, null=True)),
                ('box_access_token', models.CharField(max_length=2000, null=True)),
                ('box_refresh_token', models.CharField(max_length=2000, null=True)),
                ('gdrive_token', models.CharField(max_length=500, null=True)),
                ('gdrive_expiry', models.DateTimeField(default=django.utils.timezone.now)),
                ('onedrive_access_token', models.CharField(max_length=2000, null=True)),
                ('onedrive_refresh_token', models.CharField(max_length=2000, null=True)),
                ('sync_status', models.BooleanField(default=True)),
                ('last_synced', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', api.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Module',
            fields=[
                ('module_code', models.CharField(editable=False, max_length=150, primary_key=True, serialize=False, unique=True)),
                ('last_updated', models.DateTimeField(default=datetime.datetime(1, 1, 1, 0, 0, tzinfo=utc))),
            ],
            managers=[
                ('objects', api.models.ModuleManager()),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='synced_modules',
            field=models.ManyToManyField(related_name='synced_users', to='api.Module'),
        ),
        migrations.AddField(
            model_name='user',
            name='taking_modules',
            field=models.ManyToManyField(related_name='users_taking', to='api.Module'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
